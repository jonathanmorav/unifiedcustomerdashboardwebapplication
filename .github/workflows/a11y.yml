name: Accessibility Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  NODE_VERSION: "18.x"

jobs:
  test-themes:
    name: Test Theme - ${{ matrix.theme }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        theme: [light, dark]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run theme tests
        run: npm test -- __tests__/theme/theme.test.ts

      - name: Run axe accessibility tests - ${{ matrix.theme }}
        run: |
          npm run build
          npx start-server-and-test 'npm start' http://localhost:3000 'npm run test:a11y -- --theme=${{ matrix.theme }}'
        env:
          THEME: ${{ matrix.theme }}
          SKIP_ENV_VALIDATION: true

      - name: Run Lighthouse CI - ${{ matrix.theme }}
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:3000
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: "./lighthouserc.json"
        env:
          THEME: ${{ matrix.theme }}

  contrast-verification:
    name: Verify Color Contrast
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run contrast tests
        run: npm test -- __tests__/theme/theme.test.ts --testNamePattern="Contrast"

      - name: Generate contrast report
        run: |
          node -e "
          const { lightTheme, darkTheme, meetsWCAGContrast } = require('./lib/theme/colors');

          console.log('=== Contrast Report ===');
          console.log('\n--- Light Theme ---');
          Object.entries(lightTheme).forEach(([key, color]) => {
            if (key.includes('text')) {
              const passes = meetsWCAGContrast(color.value, lightTheme.bgAlice100.value, 'AA');
              console.log(\`\${key}: \${color.contrast}:1 - \${passes ? 'PASS' : 'FAIL'}\`);
            }
          });

          console.log('\n--- Dark Theme ---');
          Object.entries(darkTheme).forEach(([key, color]) => {
            if (key.includes('text')) {
              const passes = meetsWCAGContrast(color.value, darkTheme.bgAlice100.value, 'AA');
              console.log(\`\${key}: \${color.contrast}:1 - \${passes ? 'PASS' : 'FAIL'}\`);
            }
          });
          "

  performance-test:
    name: Theme Performance Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run performance tests
        run: npm test -- __tests__/theme/theme.test.ts --testNamePattern="Performance"

      - name: Check bundle size
        run: |
          npm run build
          echo "Theme system bundle size:"
          find .next -name "*.js" -exec grep -l "theme" {} \; | xargs du -ch | grep total

  a11y-success:
    name: Accessibility Tests Success
    needs: [test-themes, contrast-verification, performance-test]
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: All accessibility tests passed
        run: echo "âœ… All accessibility tests passed successfully!"
