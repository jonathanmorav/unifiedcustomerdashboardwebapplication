name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: "18.x"

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build application
        run: npm run build
        env:
          SKIP_ENV_VALIDATION: true

      - name: Deploy to Vercel
        if: env.VERCEL_TOKEN != ''
        run: |
          npm i -g vercel
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      # Alternative: Deploy to custom server
      # - name: Deploy to Server
      #   uses: appleboy/ssh-action@v0.1.5
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.SSH_KEY }}
      #     script: |
      #       cd /var/www/unified-customer-dashboard
      #       git pull origin main
      #       npm ci
      #       npx prisma generate
      #       npx prisma migrate deploy
      #       npm run build
      #       pm2 restart unified-dashboard

  # Create a release on successful deploy
  release:
    name: Create Release
    needs: deploy
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from package.json
        id: package-version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.package-version.outputs.VERSION }}
          name: Release v${{ steps.package-version.outputs.VERSION }}
          body: |
            ## ðŸš€ Deployment Summary

            - **Version**: v${{ steps.package-version.outputs.VERSION }}
            - **Commit**: ${{ github.sha }}
            - **Deployed by**: ${{ github.actor }}
            - **Deployment time**: ${{ github.event.head_commit.timestamp }}

            ### Changes in this release:
            ${{ github.event.head_commit.message }}

            ---
            View the [full changelog](https://github.com/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.sha }})
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
